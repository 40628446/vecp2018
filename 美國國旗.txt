-- 導入 "js" 模組
local js = require "js"
-- global 就是 javascript 的 window
local global = js.global
local document = global.document
-- html 檔案中 canvas　id 設為 "canvas"
local canvas = document:getElementById("canvas")
-- 將 ctx 設為 canvas 2d 繪圖畫布變數
local ctx = canvas:getContext("2d")

-- 屬性呼叫使用 . 而方法呼叫使用 :
-- 設定填圖顏色
ctx.fillStyle = "rgb(200,0,0)"
-- 設定畫筆顏色
-- 導入 "js" 模組
local js = require "js"
-- global 就是 javascript 的 window
local global = js.global
local document = global.document
-- html 檔案中 canvas　id 設為 "canvas"
local canvas = document:getElementById("canvas")
-- 將 ctx 設為 canvas 2d 繪圖畫布變數
local ctx = canvas:getContext("2d")

-- 乘上 deg 可轉為徑度單位
deg = math.pi / 180

-- 建立多邊形定點位置畫線函式
function star(radius, xc, yc, n, fs, ss, fors,aa)
    radius = radius or 50
    xc = xc or 100
    yc = yc or 100
    n = n or 5
    -- 屬性呼叫使用 . 而方法呼叫使用 :
    -- 填色屬性
    fs = fs or "rgb(200,0,0)"
    -- 畫筆顏色屬性
    ss = ss or "rgb(0,0,200)"
    -- 內定為填色
    fors = fors or "fill"
    aa=aa or 0
    ctx.fillStyle = fs
    ctx.strokeStyle = ss
    xi = xc + radius*math.cos((360/n)*deg+(90+aa)*deg)
    yi = yc - radius*math.sin((360/n)*deg+(90+aa)*deg)
    ctx:beginPath()
    ctx:moveTo(xi,yi)
    for i = 2, n+1 do
        x = xc + radius*math.cos((360/n)*deg*i+(90+aa)*deg)
        y = yc - radius*math.sin((360/n)*deg*i+(90+aa)*deg)
        ctx:lineTo(x,y)
    end
    ctx:closePath()
    if fors == "fill" then
        ctx:fill()
    else
        ctx:stroke()
    end
end


--紅色長方形底
star(300, 300, 300, 4, "rgb(255,0,0)", "rgb(100,100,0)", "fill",-45)
star(300, 0, 300, 4, "rgb(255,0,0)", "rgb(100,100,0)", "fill",-45)
star(300, 600, 300, 4, "rgb(255,0,0)", "rgb(100,100,0)", "fill",-45)
--白色長條形
star(20, 360, 90, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 380, 90, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 400, 90, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 420, 90, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 440, 90, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 460, 90, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 480, 90, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 500, 90, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 520, 90, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 540, 90, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 560, 90, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 580, 90, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 600, 90, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 340, 90, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 320, 90, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 300, 90, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 280, 90, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 260, 90, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 240, 90, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 220, 90, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 200, 90, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 180, 90, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 160, 90, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 140, 90, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 120, 90, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 100, 90, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 80, 90, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 60, 90, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 40, 90, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 20, 90, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 0, 90, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 360, 150, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 380, 150, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 400, 150, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 420, 150, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 440, 150, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 460, 150, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 480, 150, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 500, 150, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 520, 150, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 540, 150, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 560, 150, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 580, 150, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 600, 150, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 340, 150, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 320, 150, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 300, 150, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 280, 150, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 260, 150, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 240, 150, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 220, 150, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 200, 150, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 180, 150, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 160, 150, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 140, 150, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 120, 150, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 100, 150, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 80, 150, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 60, 150, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 40, 150, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 20, 150, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 0, 150, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 360, 210, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 380, 210, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 400, 210, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 420, 210, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 440, 210, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 460, 210, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 480, 210, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 500, 210, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 520, 210, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 540, 210, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 560, 210, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 580, 210, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 600, 210, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 340, 210, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 320, 210, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 300, 210, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 280, 210, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 260, 210, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 240, 210, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 220, 210, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 200, 210, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 180, 210, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 160, 210, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 140, 210, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 120, 210, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 100, 210, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 80, 210, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 60, 210, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 40, 210, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 20, 210, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 0, 210, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 360, 210, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 380, 210, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 400, 210, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 420, 210, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 440, 210, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 460, 210, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 480, 210, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 500, 210, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 520, 210, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 540, 210, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 560, 210, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 580, 210, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 600, 210, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 340, 210, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 320, 210, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 300, 210, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 280, 210, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 260, 210, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 240, 210, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 220, 210, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 200, 210, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 180, 210, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 160, 210, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 140, 210, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 120, 210, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 100, 210, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 80, 210, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 60, 210, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 40, 210, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 20, 210, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 0, 210, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 360, 270, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 380, 270, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 400, 270, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 420, 270, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 440, 270, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 460, 270, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 480, 270, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 500, 270, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 520, 270, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 540, 270, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 560, 270, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 580, 270, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 600, 270, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 340, 270, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 320, 270, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 300, 270, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 280, 270, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 260, 270, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 240, 270, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 220, 270, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 200, 270, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 180, 270, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 160, 270, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 140, 270, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 120, 270, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 100, 270, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 80, 270, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 60, 270, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 40, 270, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 20, 270, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 0, 270, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 360, 330, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 380, 330, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 400, 330, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 420, 330, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 440, 330, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 460, 330, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 480, 330, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 500, 330, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 520, 330, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 540, 330, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 560, 330, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 580, 330, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 600, 330, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 340, 330, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 320, 330, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 300, 330, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 280, 330, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 260, 330, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 240, 330, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 220, 330, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 200, 330, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 180, 330, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 160, 330, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 140, 330, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 120, 330, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 100, 330, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 80, 330, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 60, 330, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 40, 330, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 20, 330, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 0, 330, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 360, 390, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 380, 390, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 400, 390, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 420, 390, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 440, 390, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 460, 390, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 480, 390, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 500, 390, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 520, 390, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 540, 390, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 560, 390, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 580, 390, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 600, 390, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 340, 390, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 320, 390, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 300, 390, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 280, 390, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 260, 390, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 240, 390, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 220, 390, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 200, 390, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 180, 390, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 160, 390, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 140, 390, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 120, 390, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 100, 390, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 80, 390, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 60, 390, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 40, 390, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 20, 390, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 0, 390, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 360, 450, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 380, 450, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 400, 450, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 420, 450, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 440, 450, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 460, 450, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 480, 450, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 500, 450, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 520, 450, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 540, 450, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 560, 450, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 580, 450, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 600, 450, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 340, 450, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 320, 450, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 300, 450, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 280, 450, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 260, 450, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 240, 450, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 220, 450, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 200, 450, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 180, 450, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 160, 450, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 140, 450, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 120, 450, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 100, 450, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 80, 450, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 60, 450, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 40, 450, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 20, 450, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 0, 450, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 360, 510, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 380, 510, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 400, 510, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 420, 510, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 440, 510, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 460, 510, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 480, 510, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 500, 510, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 520, 510, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 540, 510, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 560, 510, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 580, 510, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 600, 510, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 340, 510, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 320, 510, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 300, 510, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 280, 510, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 260, 510, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 240, 510, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 220, 510, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 200, 510, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 180, 510, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 160, 510, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 140, 510, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 120, 510, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 100, 510, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 80, 510, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 60, 510, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 40, 510, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 20, 510, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
star(20, 0, 510, 4, "rgb(255,255,255)", "rgb(100,100,0)", "fill",45)
--左上藍色長方形
star(150, 100, 210, 4, "rgb(0,0,128)", "rgb(100,100,0)", "fill",45)
star(150, 190, 210, 4, "rgb(0,0,128)", "rgb(100,100,0)", "fill",45)
--星星
-- 導入 "js" 模組
local js = require "js"
-- global 就是 javascript 的 window
local global = js.global
local document = global.document
-- html 檔案中 canvas　id 設為 "canvas"
-- 準備繪圖畫布
local canvas = document:getElementById("canvas")
-- 將 ctx 設為 canvas 2d 繪圖畫布變數
ctx = canvas:getContext("2d")


-- 準備在 canvas 中繪圖
function draw_line(x1, y1, x2, y2, color)
    color = color or "red"
    ctx:beginPath()
    ctx:moveTo(x1, y1)
    ctx:lineTo(x2, y2)
    ctx.strokeStyle = color
    ctx:stroke()
end

-- x, y 為中心,  r 為半徑, angle 旋轉角,  solid 空心或實心,  color 顏色
function star(x, y, r, angle, solid, color)
    angle = angle or 0
    solid = solid or flase
    color = color or "rgb(255,255,255)"
    -- 以 x, y 為圓心, 計算五個外點
    local deg = math.pi/180
    -- 圓心到水平線距離
    local a = r*math.cos(72*deg)
    -- a 頂點向右到內點距離
    local b = (r*math.cos(72*deg)/math.cos(36*deg))*math.sin(36*deg)
    -- 利用畢氏定理求內點半徑
    rin = math.sqrt(a*a + b*b)
    -- 查驗 a, b 與 rin
    --print(a, b, rin)
    if (solid) then
        ctx:beginPath()
    end
    for i = 0, 4 do
        xout = (x + r*math.sin((360/5)*deg*i+angle*deg))
        yout = (y + r*math.cos((360/5)*deg*i+angle*deg))
        -- 外點增量 + 1
        xout2 = x + r*math.sin((360/5)*deg*(i+1)+angle*deg)
        yout2 = y + r*math.cos((360/5)*deg*(i+1)+angle*deg)
        xin = x + rin*math.sin((360/5)*deg*i+36*deg+angle*deg)
        yin = y + rin*math.cos((360/5)*deg*i+36*deg+angle*deg)
        -- 查驗外點與內點座標
        --print(xout, yout, xin, yin)
        if (solid) then
            -- 填色
            if (i==0) then
                ctx:moveTo(xout, yout)
                ctx:lineTo(xin, yin)
                ctx:lineTo(xout2, yout2)
            else
                ctx:lineTo(xin, yin)
                ctx:lineTo(xout2, yout2)
            end
        else
            -- 空心
            draw_line(xout, yout, xin, yin, color)
            -- 畫空心五芒星, 無關畫線次序, 若實心則與畫線次序有關
            draw_line(xout2, yout2, xin, yin, color)
        end
    end
    
    if (solid) then
        ctx.fillStyle = color
        ctx:fill()
    end
end

star(14, 116, 12, 38, true, "rgb(255,255,255)")
star(64, 116, 12, 38, true, "rgb(255,255,255)")
star(114, 116, 12, 38, true, "rgb(255,255,255)")
star(164, 116, 12, 38, true, "rgb(255,255,255)")
star(214, 116, 12, 38, true, "rgb(255,255,255)")
star(264, 116, 12, 38, true, "rgb(255,255,255)")

star(39, 138.5, 12, 38, true, "rgb(255,255,255)")
star(89, 138.5, 12, 38, true, "rgb(255,255,255)")
star(139, 138.5, 12, 38, true, "rgb(255,255,255)")
star(189, 138.5, 12, 38, true, "rgb(255,255,255)")
star(239, 138.5, 12, 38, true, "rgb(255,255,255)")

star(14, 158.5, 12, 38, true, "rgb(255,255,255)")
star(64, 158.5, 12, 38, true, "rgb(255,255,255)")
star(114, 158.5, 12, 38, true, "rgb(255,255,255)")
star(164, 158.5, 12, 38, true, "rgb(255,255,255)")
star(214, 158.5, 12, 38, true, "rgb(255,255,255)")
star(264, 158.5, 12, 38, true, "rgb(255,255,255)")

star(39, 178.5, 12, 38, true, "rgb(255,255,255)")
star(89, 178.5, 12, 38, true, "rgb(255,255,255)")
star(139, 178.5, 12, 38, true, "rgb(255,255,255)")
star(189, 178.5, 12, 38, true, "rgb(255,255,255)")
star(239, 178.5, 12, 38, true, "rgb(255,255,255)")

star(14, 198.5, 12, 38, true, "rgb(255,255,255)")
star(64, 198.5, 12, 38, true, "rgb(255,255,255)")
star(114, 198.5, 12, 38, true, "rgb(255,255,255)")
star(164, 198.5, 12, 38, true, "rgb(255,255,255)")
star(214, 198.5, 12, 38, true, "rgb(255,255,255)")
star(264, 198.5, 12, 38, true, "rgb(255,255,255)")

star(39, 218.5, 12, 38, true, "rgb(255,255,255)")
star(89, 218.5, 12, 38, true, "rgb(255,255,255)")
star(139, 218.5, 12, 38, true, "rgb(255,255,255)")
star(189, 218.5, 12, 38, true, "rgb(255,255,255)")
star(239, 218.5, 12, 38, true, "rgb(255,255,255)")

star(14, 238.5, 12, 38, true, "rgb(255,255,255)")
star(64, 238.5, 12, 38, true, "rgb(255,255,255)")
star(114, 238.5, 12, 38, true, "rgb(255,255,255)")
star(164, 238.5, 12, 38, true, "rgb(255,255,255)")
star(214, 238.5, 12, 38, true, "rgb(255,255,255)")
star(264, 238.5, 12, 38, true, "rgb(255,255,255)")

star(39, 258.5, 12, 38, true, "rgb(255,255,255)")
star(89, 258.5, 12, 38, true, "rgb(255,255,255)")
star(139, 258.5, 12, 38, true, "rgb(255,255,255)")
star(189, 258.5, 12, 38, true, "rgb(255,255,255)")
star(239, 258.5, 12, 38, true, "rgb(255,255,255)")

star(14, 278.5, 12, 38, true, "rgb(255,255,255)")
star(64, 278.5, 12, 38, true, "rgb(255,255,255)")
star(114, 278.5, 12, 38, true, "rgb(255,255,255)")
star(164, 278.5, 12, 38, true, "rgb(255,255,255)")
star(214, 278.5, 12, 38, true, "rgb(255,255,255)")
star(264, 278.5, 12, 38, true, "rgb(255,255,255)")